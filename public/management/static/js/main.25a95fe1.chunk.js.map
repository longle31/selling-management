{"version":3,"sources":["app/NavBar.js","api/client.js","features/products/productsSlice.js","features/products/AddNewProductForm.js","features/strategies/strategiesSlice.js","features/products/AnalysisModal.js","algorithms/knapsack.js","features/products/ProductsPage.js","app/Toolbar.js","features/strategies/StrategiesPage.js","App.js","app/store.js","serviceWorker.js","index.js"],"names":["NavBar","className","to","aria-hidden","focusable","data-prefix","data-icon","role","xmlns","viewBox","fill","d","class","onClick","document","location","assign","host","client","endpoint","a","body","customConfig","headers","config","method","JSON","stringify","fetch","response","json","data","ok","Error","statusText","Promise","reject","message","get","post","put","delete","require","createSlice","createEntityAdapter","createAsyncThunk","productsAdapter","selectId","customer","_id","fetchProducts","products","addNewProduct","product","productSlice","name","initialState","getInitialState","status","error","productsModal","isDisplay","modalOption","reducers","displayProductsModal","state","action","payload","setProductModalOption","extraReducers","fulfilled","upsertMany","pending","rejected","addOne","actions","getSelectors","selectAllProducts","selectAll","selectById","selectIds","AddNewProductForm","dispatch","useDispatch","useState","loadingStatus","setLoadingStatus","productName","productType","price","cost","currentProduct","setCurrentProduct","validation","id","tabindex","aria-labelledby","style","display","type","data-dismiss","aria-label","value","onChange","e","target","vlue","datatoggle","title","min","step","disabled","then","catch","addNewStrategy","strategy","fetchStrategies","strategies","strategiesAdapter","strategiesSlice","selectAllStrategies","AnalysisModal","useSelector","setStep","totalPrice","totalCost","startingDate","endingDate","currentStrategy","setCurrentStrategy","saveValiation","length","localeCompare","renderedProducts","map","parseInt","solution","items","capacity","idxItem","idxWeight","oldMax","newMax","numItems","weightMatrix","Array","keepMatrix","solutionSet","push","knapsack","sort","b","maxValue","set","reduce","total","p","ProductsPage","content","modalDisplayed","useEffect","data-label","datsa-label","Toolbar","StrategiesPage","substring","substr","App","exact","path","component","configureStore","reducer","productsReducers","strategiesReducers","Boolean","window","hostname","match","ReactDOM","render","StrictMode","store","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.25a95fe1.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport '../App.css';\r\n\r\nexport const NavBar = () => {\r\n    const logout = ()=>{\r\n        document.location.assign('/login');\r\n    }\r\n    return (\r\n        <div className=\"resposive-navbar\">\r\n            <ul className=\"navbar-nav\">\r\n                <li className=\"nav-item\">\r\n                    <Link className=\"nav-link\" to=\"/management/products\">\r\n                        <svg aria-hidden=\"true\" focusable=\"false\" data-prefix=\"fas\" data-icon=\"boxes\" className=\"svg-inline--fa fa-boxes fa-w-18\" role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 576 512\">\r\n                            <path fill=\"currentColor\" d=\"M560 288h-80v96l-32-21.3-32 21.3v-96h-80c-8.8 0-16 7.2-16 16v192c0 8.8 7.2 16 16 16h224c8.8 0 16-7.2 16-16V304c0-8.8-7.2-16-16-16zm-384-64h224c8.8 0 16-7.2 16-16V16c0-8.8-7.2-16-16-16h-80v96l-32-21.3L256 96V0h-80c-8.8 0-16 7.2-16 16v192c0 8.8 7.2 16 16 16zm64 64h-80v96l-32-21.3L96 384v-96H16c-8.8 0-16 7.2-16 16v192c0 8.8 7.2 16 16 16h224c8.8 0 16-7.2 16-16V304c0-8.8-7.2-16-16-16z\"\r\n\r\n                            >\r\n                            </path>\r\n                        </svg>\r\n                        <span className=\"link-text\">Product</span>\r\n                    </Link>\r\n                </li>\r\n\r\n                <li className=\"nav-item\">\r\n                    <Link className=\"nav-link\" to=\"/\">\r\n                        <svg aria-hidden=\"true\" focusable=\"false\" data-prefix=\"fas\" data-icon=\"file-invoice-dollar\" className=\"svg-inline--fa fa-file-invoice-dollar fa-w-12\" role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 384 512\">\r\n                            <path fill=\"currentColor\" d=\"M377 105L279.1 7c-4.5-4.5-10.6-7-17-7H256v128h128v-6.1c0-6.3-2.5-12.4-7-16.9zm-153 31V0H24C10.7 0 0 10.7 0 24v464c0 13.3 10.7 24 24 24h336c13.3 0 24-10.7 24-24V160H248c-13.2 0-24-10.8-24-24zM64 72c0-4.42 3.58-8 8-8h80c4.42 0 8 3.58 8 8v16c0 4.42-3.58 8-8 8H72c-4.42 0-8-3.58-8-8V72zm0 80v-16c0-4.42 3.58-8 8-8h80c4.42 0 8 3.58 8 8v16c0 4.42-3.58 8-8 8H72c-4.42 0-8-3.58-8-8zm144 263.88V440c0 4.42-3.58 8-8 8h-16c-4.42 0-8-3.58-8-8v-24.29c-11.29-.58-22.27-4.52-31.37-11.35-3.9-2.93-4.1-8.77-.57-12.14l11.75-11.21c2.77-2.64 6.89-2.76 10.13-.73 3.87 2.42 8.26 3.72 12.82 3.72h28.11c6.5 0 11.8-5.92 11.8-13.19 0-5.95-3.61-11.19-8.77-12.73l-45-13.5c-18.59-5.58-31.58-23.42-31.58-43.39 0-24.52 19.05-44.44 42.67-45.07V232c0-4.42 3.58-8 8-8h16c4.42 0 8 3.58 8 8v24.29c11.29.58 22.27 4.51 31.37 11.35 3.9 2.93 4.1 8.77.57 12.14l-11.75 11.21c-2.77 2.64-6.89 2.76-10.13.73-3.87-2.43-8.26-3.72-12.82-3.72h-28.11c-6.5 0-11.8 5.92-11.8 13.19 0 5.95 3.61 11.19 8.77 12.73l45 13.5c18.59 5.58 31.58 23.42 31.58 43.39 0 24.53-19.05 44.44-42.67 45.07z\">\r\n\r\n                            </path>\r\n                        </svg>\r\n                        <span className=\"link-text\">Product</span>\r\n                    </Link>\r\n                </li>\r\n\r\n\r\n                <li className=\"nav-item\">\r\n                    <Link className=\"nav-link\" to=\"/\">\r\n                        <svg aria-hidden=\"true\" focusable=\"false\" data-prefix=\"fas\" data-icon=\"users\" className=\"svg-inline--fa fa-users fa-w-20\" role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 640 512\">\r\n                            <path fill=\"currentColor\" d=\"M96 224c35.3 0 64-28.7 64-64s-28.7-64-64-64-64 28.7-64 64 28.7 64 64 64zm448 0c35.3 0 64-28.7 64-64s-28.7-64-64-64-64 28.7-64 64 28.7 64 64 64zm32 32h-64c-17.6 0-33.5 7.1-45.1 18.6 40.3 22.1 68.9 62 75.1 109.4h66c17.7 0 32-14.3 32-32v-32c0-35.3-28.7-64-64-64zm-256 0c61.9 0 112-50.1 112-112S381.9 32 320 32 208 82.1 208 144s50.1 112 112 112zm76.8 32h-8.3c-20.8 10-43.9 16-68.5 16s-47.6-6-68.5-16h-8.3C179.6 288 128 339.6 128 403.2V432c0 26.5 21.5 48 48 48h288c26.5 0 48-21.5 48-48v-28.8c0-63.6-51.6-115.2-115.2-115.2zm-223.7-13.4C161.5 263.1 145.6 256 128 256H64c-35.3 0-64 28.7-64 64v32c0 17.7 14.3 32 32 32h65.9c6.3-47.4 34.9-87.3 75.2-109.4z\">\r\n                            </path>\r\n                        </svg>\r\n\r\n                        <span className=\"link-text\">Product</span>\r\n                    </Link>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                    <Link className=\"nav-link\"  to=\"/management/strategies\">\r\n                        <svg aria-hidden=\"true\" focusable=\"false\" data-prefix=\"fas\" data-icon=\"book-open\" class=\"svg-inline--fa fa-book-open fa-w-18\" role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 576 512\">\r\n                            <path fill=\"currentColor\" d=\"M542.22 32.05c-54.8 3.11-163.72 14.43-230.96 55.59-4.64 2.84-7.27 7.89-7.27 13.17v363.87c0 11.55 12.63 18.85 23.28 13.49 69.18-34.82 169.23-44.32 218.7-46.92 16.89-.89 30.02-14.43 30.02-30.66V62.75c.01-17.71-15.35-31.74-33.77-30.7zM264.73 87.64C197.5 46.48 88.58 35.17 33.78 32.05 15.36 31.01 0 45.04 0 62.75V400.6c0 16.24 13.13 29.78 30.02 30.66 49.49 2.6 149.59 12.11 218.77 46.95 10.62 5.35 23.21-1.94 23.21-13.46V100.63c0-5.29-2.62-10.14-7.27-12.99z\">\r\n                            </path>\r\n                        </svg>\r\n\r\n                        <span className=\"link-text\">Product</span>\r\n                    </Link>\r\n                </li>\r\n                \r\n                <li className=\"nav-item\" >\r\n                    <Link to=\"#\" className=\"nav-link\" onClick={logout}>\r\n                        <svg aria-hidden=\"true\" focusable=\"false\" data-prefix=\"fas\" data-icon=\"sign-out-alt\" className=\"svg-inline--fa fa-sign-out-alt fa-w-16\" role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\">\r\n                            <path fill=\"currentColor\" d=\"M497 273L329 441c-15 15-41 4.5-41-17v-96H152c-13.3 0-24-10.7-24-24v-96c0-13.3 10.7-24 24-24h136V88c0-21.4 25.9-32 41-17l168 168c9.3 9.4 9.3 24.6 0 34zM192 436v-40c0-6.6-5.4-12-12-12H96c-17.7 0-32-14.3-32-32V160c0-17.7 14.3-32 32-32h84c6.6 0 12-5.4 12-12V76c0-6.6-5.4-12-12-12H96c-53 0-96 43-96 96v192c0 53 43 96 96 96h84c6.6 0 12-5.4 12-12z\"\r\n                                className=\"fa-primary\"\r\n                            >\r\n                            </path>\r\n                        </svg>\r\n                        <span className=\"link-text\">Product</span>\r\n                    </Link>\r\n                </li>\r\n\r\n            </ul>\r\n        </div>\r\n\r\n    );\r\n}","\r\nconst host = document.location.host;\r\n\r\nexport async function client (endpoint, {body, ...customConfig}){\r\n    const headers = {'Content-Type': 'application/json'};\r\n    const config ={\r\n        method : body? 'POST': 'GET',\r\n        ...customConfig,\r\n        headers:{\r\n            ...headers,\r\n            ...customConfig.headers\r\n        }\r\n    }\r\n\r\n    if(body){\r\n        config.body = JSON.stringify(body);\r\n    }\r\n    \r\n    \r\n    let data;\r\n    try {\r\n        const response = await fetch(`http://${host}/${endpoint}`, config);\r\n        // if(response.status === 401){\r\n        //     logout();\r\n        //     window.location.assign(window.location);\r\n        // }\r\n        data = await response.json();\r\n        if(response.ok){\r\n            return data;\r\n        }\r\n        throw new Error(response.statusText);\r\n    } catch (err) {\r\n        return Promise.reject(err.message ? err.message : data)\r\n    }\r\n}\r\n\r\n\r\n\r\nclient.get = function(endpoint, customConfig = {}){\r\n    return client(endpoint, {...customConfig, method: 'GET'});\r\n}\r\n\r\nclient.post = function(endpoint,body, customConfig = {}){\r\n    return client(endpoint, {...customConfig,body, method: 'POST'});\r\n}\r\n\r\nclient.put = function(endpoint,body, customConfig = {}){\r\n    return client(endpoint, {...customConfig, body, method: 'PUT'})\r\n}\r\n\r\nclient.delete = function(endpoint, customConfig = {}){\r\n    return client(endpoint, {...customConfig, method:'DELETE'});\r\n}\r\n\r\n","import { client } from \"../../api/client\";\r\n\r\nconst { createSlice, createEntityAdapter, createAsyncThunk } = require(\"@reduxjs/toolkit\");\r\n\r\n\r\nconst productsAdapter = createEntityAdapter({\r\n    selectId: customer => customer._id,\r\n})\r\n\r\nexport const fetchProducts = createAsyncThunk('products/fetchProducts', async ()=>{\r\n    const response = await client.get(\"api/products\");\r\n\r\n    return response.products;\r\n})\r\n\r\nexport const addNewProduct = createAsyncThunk('products/addNewProduct', async product => {\r\n    const response = await client.post(\"api/products\", {product});\r\n    return response.product;\r\n})\r\n\r\nconst productsModal = {\r\n    isDisplay: true,\r\n    modalOption : 1\r\n}\r\nconst initialState = \r\n productsAdapter.getInitialState({\r\n    status: 'idle',\r\n    error: null,\r\n    productsModal,\r\n})\r\n\r\nconst productSlice = createSlice({\r\n    name:'products',\r\n    initialState,\r\n    reducers:{\r\n        displayProductsModal :(state, action)=>{\r\n            state.productsModal.isDisplay = action.payload;\r\n        },\r\n        setProductModalOption : (state, action)=>{\r\n            state.productsModal.modalOption = action.payload;\r\n        }\r\n    },\r\n    extraReducers:{\r\n        [fetchProducts.fulfilled]:(state, action)=>{\r\n            state.status = 'succeeded';\r\n            productsAdapter.upsertMany(state, action.payload);\r\n        },\r\n        [fetchProducts.pending]:(state, action)=>{\r\n            state.status = 'loading';\r\n        },\r\n        [fetchProducts.rejected] :(state, action)=>{\r\n            state.status = 'failed';\r\n            state.error = action.error.message;\r\n        },\r\n        [addNewProduct.fulfilled] :(state ,action) => productsAdapter.addOne(state, action.payload)\r\n\r\n        \r\n\r\n    }\r\n});\r\n\r\n\r\nexport const {\r\n    displayProductsModal,\r\n    setProductModalOption\r\n} = productSlice.actions;\r\n\r\nexport const {\r\n    selectAll: selectAllProducts,\r\n    selectById: selectProductById,\r\n    selectIds: selectProductIds,\r\n} = productsAdapter.getSelectors(state => state.products)\r\n\r\nexport default productSlice.reducer;","import React, { useEffect, useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { addNewProduct, displayProductsModal } from './productsSlice';\r\n\r\nexport const AddNewProductForm = () => {\r\n    const dispatch = useDispatch();\r\n\r\n    const [loadingStatus, setLoadingStatus] = useState(false);\r\n    const [currentProduct, setCurrentProduct] = useState({\r\n        productName: '',\r\n        productType: 'smart phone',\r\n        price: 0,\r\n        cost: 0,\r\n    });\r\n\r\n\r\n    const validation = currentProduct.productName && currentProduct.price > 0 && currentProduct.cost > 0;\r\n\r\n\r\n\r\n\r\n    const createWarningApearance = (warningText, status) => {\r\n        if (status === false)\r\n            return (\r\n                <i className=\"fa fa-exclamation-circle input-group-text reg-icon\"\r\n                    style={{ color: \"red\" }} aria-hidden=\"true\"\r\n                >\r\n                </i>\r\n            );\r\n        else {\r\n            return (<i className=\"fa fa-check input-group-text reg-icon\"\r\n                style={{ color: \"green\" }} aria-hidden=\"true\"\r\n            >\r\n            </i>)\r\n        }\r\n    }\r\n\r\n\r\n    const onSave = () => {\r\n        setLoadingStatus(true);\r\n        dispatch(addNewProduct(currentProduct))\r\n            .then(() => {\r\n                setLoadingStatus(false)\r\n                setCurrentProduct({\r\n                    productName: '',\r\n                    productType: 'smart phone',\r\n                    price: 0,\r\n                    cost: 0,\r\n                })\r\n            })\r\n            .catch(() => setLoadingStatus(false));\r\n\r\n    }\r\n\r\n    return (\r\n        <div class=\"modal show fade \" id=\"addNewProductForm\" tabindex=\"-1\" aria-labelledby=\"analysisModalLabel\" aria-hidden=\"true\"\r\n            style={{ display: \"block\" }}\r\n        >\r\n            <div class=\"modal-dialog\">\r\n                <div class=\"modal-content\">\r\n                    <div class=\"modal-header\">\r\n                        <h5 class=\"modal-title\" id=\"analysisModalLabel\">Add New Product</h5>\r\n                        <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\"\r\n                            onClick={() => dispatch(displayProductsModal(false))}>\r\n                            <span aria-hidden=\"true\">&times;</span>\r\n                        </button>\r\n                    </div>\r\n                    <div className=\"modal-body\">\r\n                        <form id=\"addNewProductForm\">\r\n                            <div className='input-group flex-nowrap mb-2' >\r\n                                <div className=\"input-group-prepend\">\r\n                                    <span className=\"input-group-text\">Product Name</span>\r\n                                </div>\r\n\r\n                                <input type=\"text\" name=\"productName\" id=\"productName\"\r\n                                    className=\"form-control\" value={currentProduct.productName}\r\n                                    onChange={e => setCurrentProduct({ ...currentProduct, productName: e.target.value })}\r\n                                />\r\n                                <div className=\"input-group-append \">\r\n\r\n                                </div>\r\n\r\n\r\n                            </div>\r\n                            <div className=\"input-group flex-nowrap mb-2\">\r\n                                <div className=\"input-group-prepend\">\r\n                                    <span className=\"input-group-text\">Type</span>\r\n                                </div>\r\n                                <select className=\"form-control\" name=\"type\" id=\"type\"\r\n                                    value={currentProduct.type}\r\n                                    onChange={e => setCurrentProduct({ ...currentProduct, type: e.target.vlue })}\r\n                                >\r\n                                    <option value=\"employee\">smart phone</option>\r\n                                    <option value=\"technician\">tablet</option>\r\n                                </select>\r\n                            </div>\r\n                            <div className='input-group flex-nowrap mb-2'>\r\n                                <div className=\"input-group-prepend\">\r\n                                    <span className=\"input-group-text\">Price</span>\r\n                                </div>\r\n\r\n                                <input type=\"number\" name=\"price\" id=\"price\"\r\n                                    datatoggle=\"tooltip\" title=\"Some tooltip text!\"\r\n                                    className=\"form-control\" min=\"0\" step=\"1\"\r\n                                    value={currentProduct.price}\r\n                                    onChange={e => setCurrentProduct({ ...currentProduct, price: e.target.value })}\r\n                                />\r\n                                <div className=\"input-group-append \">\r\n\r\n                                </div>\r\n\r\n                            </div>\r\n                            <div className='input-group flex-nowrap mb-2'>\r\n                                <div className=\"input-group-prepend\">\r\n                                    <span className=\"input-group-text\">Cost</span>\r\n                                </div>\r\n\r\n                                <input type=\"number\" name=\"cost\" id=\"cost\" className=\"form-control\"\r\n                                    min=\"0\" step=\"1\" value={currentProduct.cost}\r\n                                    onChange={e => setCurrentProduct({ ...currentProduct, cost: e.target.value })}\r\n                                />\r\n                                <div className=\"input-group-append \">\r\n\r\n                                </div>\r\n                            </div>\r\n\r\n                        </form>\r\n\r\n                    </div>\r\n                    <div className=\"modal-footer\">\r\n                        <button\r\n                            type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\"\r\n                            onClick={() => dispatch(displayProductsModal(false))}\r\n                        >\r\n                            Close\r\n                        </button>\r\n                        <button\r\n                            type=\"button\" className=\"btn btn-primary\"\r\n                            disabled={!validation}\r\n                            onClick={e => onSave(e)}\r\n                        >\r\n                            {loadingStatus ? <i className=\"fa fa-circle-o-notch fa-spin\"></i> : ''}\r\n                            &nbsp;Save\r\n                    </button>\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n\r\n\r\n\r\n        </div>\r\n    );\r\n}","import { client } from \"../../api/client\";\r\n\r\nconst { createSlice, createEntityAdapter, createAsyncThunk } = require(\"@reduxjs/toolkit\");\r\n\r\n\r\nexport const addNewStrategy = createAsyncThunk('strategies/addNewStrategy', async strategy => {\r\n    const response = await client.post('api/strategies', {strategy});\r\n    return response.strategy;\r\n});\r\n\r\nexport const fetchStrategies = createAsyncThunk('strategies/fetchStrategies', async () => {\r\n    const response = await client.get('api/strategies');\r\n    return response.strategies;\r\n});\r\n\r\nconst strategiesAdapter = createEntityAdapter({\r\n    selectId: strategy => strategy._id,\r\n})\r\n\r\nconst initialState = strategiesAdapter.getInitialState({\r\n    status: 'idle',\r\n    error: null,\r\n})\r\n\r\nconst strategiesSlice = createSlice({\r\n    name: 'strategies',\r\n    initialState,\r\n    reducers: {\r\n\r\n    },\r\n    extraReducers: {\r\n        [fetchStrategies.rejected] : (state, action)=>{\r\n            state.status = 'failed';\r\n            state.error = action.error.message;\r\n        },\r\n        [fetchStrategies.pending] : (state, action)=>{\r\n            state.status = 'loading';\r\n            \r\n        },\r\n        [fetchStrategies.fulfilled] : (state, action)=>{\r\n            state.status = 'succeeded';\r\n            strategiesAdapter.upsertMany(state, action.payload);\r\n        },\r\n       [addNewStrategy.fulfilled]: \r\n       (state, action) => strategiesAdapter.addOne(state, action.payload)\r\n    }\r\n});\r\n\r\n\r\nexport const {\r\n    selectAll: selectAllStrategies,\r\n    selectIds: selectStrategyIds,\r\n    selectById: selectStrategyById,\r\n} = strategiesAdapter.getSelectors(state => state.strategies)\r\n\r\nexport default strategiesSlice.reducer;","import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { knapsack } from '../../algorithms/knapsack';\r\nimport { addNewStrategy } from '../strategies/strategiesSlice';\r\nimport { displayProductsModal, selectAllProducts } from './productsSlice';\r\n\r\nexport const AnalysisModal = () => {\r\n    const products = useSelector(selectAllProducts);\r\n    const dispatch = useDispatch();\r\n\r\n    const [step, setStep] = useState(0);\r\n\r\n    const [currentStrategy, setCurrentStrategy] = useState({\r\n        products: [],\r\n        totalPrice: 0,\r\n        totalCost: 0,\r\n        startingDate: \"\",\r\n        endingDate: \"\",\r\n        title: '',\r\n    });\r\n\r\n    const saveValiation = currentStrategy.products.length > 0 && currentStrategy.title\r\n        && currentStrategy.startingDate && currentStrategy.endingDate && currentStrategy.endingDate.localeCompare(currentStrategy.startingDate) > 0;\r\n\r\n    const renderedProducts = currentStrategy.products.map(product =>\r\n        <tr key={product._id}>\r\n            <td>{product.productName}</td>\r\n            <td>{product.price}</td>\r\n            <td>{product.cost}</td>\r\n        </tr>);\r\n\r\n    const analyze = () => {\r\n\r\n\r\n        let input = products.sort((a, b) => a.cost - b.cost);\r\n\r\n        const solution = knapsack(input, currentStrategy.totalCost);\r\n        setCurrentStrategy({\r\n            ...currentStrategy, totalPrice: solution.maxValue, products: solution.set,\r\n            totalCost: solution.set.reduce((total, p) => { return total + p.cost }, 0)\r\n        });\r\n\r\n        setStep(step + 1);\r\n    }\r\n\r\n    const save = () => {\r\n        \r\n        dispatch(addNewStrategy(currentStrategy));\r\n        setCurrentStrategy({\r\n            products: [],\r\n            totalPrice: 0,\r\n            totalCost: 0,\r\n            startingDate: \"\",\r\n            endingDate: \"\",\r\n            title: '',})\r\n        setStep(0);\r\n    }\r\n\r\n\r\n    return (\r\n        <div class=\"modal show fade \" id=\"analysisModal\" tabindex=\"-1\" aria-labelledby=\"analysisModalLabel\" aria-hidden=\"true\"\r\n            style={{ display: \"block\" }}\r\n        >\r\n            <div class=\"modal-dialog\">\r\n                <div class=\"modal-content\">\r\n                    <div class=\"modal-header\">\r\n                        <h5 class=\"modal-title\" id=\"analysisModalLabel\">Analyze</h5>\r\n                        <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\"\r\n                            onClick={() => dispatch(displayProductsModal(false))}>\r\n                            <span aria-hidden=\"true\">&times;</span>\r\n                        </button>\r\n                    </div>\r\n                    <div class=\"modal-body\">\r\n\r\n                        <form>\r\n                            <div className=\"input-group flex-nowrap mb-2\">\r\n\r\n                                <span class=\"label input-group-text\">Total Cost</span>\r\n\r\n                                <input type=\"number\" min=\"0\" step=\"1\" name=\"cost\" value={currentStrategy.totalCost}\r\n                                    id=\"cost\" className=\"form-control\" onChange={(e) => setCurrentStrategy({ ...currentStrategy, totalCost: e.target.value })}\r\n                                />\r\n                            </div>\r\n                            {step !== 0 ?\r\n                                <div>\r\n                                    <div className=\"input-group flex-nowrap mb-2\">\r\n                                        <span class=\"label input-group-text\">Begin Date</span>\r\n                                        <input type=\"date\" name=\"beginDate\" id=\"beginDate\" className=\"form-control\"\r\n                                            value={currentStrategy.startingDate}\r\n                                            onChange={e => setCurrentStrategy({ ...currentStrategy, startingDate: e.target.value })}\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"input-group flex-nowrap mb-2\">\r\n                                        <span class=\"label input-group-text\">End Date</span>\r\n                                        <input type=\"date\" name=\"endDate\" id=\"endDate\" className=\"form-control\"\r\n                                            value={currentStrategy.endingDate}\r\n                                            onChange={e => setCurrentStrategy({ ...currentStrategy, endingDate: e.target.value })}\r\n                                        />\r\n                                    </div>\r\n\r\n                                    <div className=\"input-group flex-nowrap mb-2\">\r\n                                        <span class=\"label input-group-text\">Title</span>\r\n                                        <input type=\"text\" name=\"title\" id=\"title\" className=\"form-control\"\r\n                                            value={currentStrategy.title}\r\n                                            onChange={e => setCurrentStrategy({ ...currentStrategy, title: e.target.value })}\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                                : \"\"}\r\n\r\n                        </form>\r\n\r\n\r\n                        <table className=\"table table-bordered table-hover assign-table\">\r\n                            <thead className=\"bg-success\">\r\n                                <tr>\r\n                                    <th>pro.name</th>\r\n                                    <th>price</th>\r\n                                    <th>cost</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody className=\"overflow-auto\">\r\n                                {renderedProducts}\r\n\r\n                            </tbody>\r\n                        </table>\r\n\r\n                    </div>\r\n                    <div class=\"modal-footer\">\r\n                        <button type=\"button\" class=\"btn btn-secondary\"\r\n                            data-dismiss=\"modal\"\r\n                            onClick={() => dispatch(displayProductsModal(false))}\r\n                        >Close</button>\r\n                        {step > 0 ? <button type=\"button\" class=\"btn btn-danger\"\r\n                            data-dismiss=\"modal\"\r\n                            onClick={() => step > 0 ? setStep(step - 1) : \"\"}\r\n                        >Previous</button> : \"\"}\r\n\r\n\r\n                        <button type=\"button\" className={step === 0 ? \"btn btn-warning\" : \"btn btn-primary\"}\r\n                            onClick={parseInt(step) === 0 ? analyze : save}\r\n                            disabled={step === 0 ? !currentStrategy.totalCost > 0 : (step === 1) ? !saveValiation : \"\"}\r\n                        >\r\n                            {step === 0 ? \"Analyze\" : \"Save\"}\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}","export function knapsack(items, capacity) {\r\n    var idxItem = 0,\r\n        idxWeight = 0,\r\n        oldMax = 0,\r\n        newMax = 0,\r\n        numItems = items.length,\r\n        weightMatrix = new Array(numItems + 1),\r\n        keepMatrix = new Array(numItems + 1),\r\n        solutionSet = [];\r\n\r\n    \r\n    // Setup matrices\r\n    for (idxItem = 0; idxItem < numItems + 1; idxItem++) {\r\n        weightMatrix[idxItem] = new Array(capacity + 1);\r\n        keepMatrix[idxItem] = new Array(capacity + 1);\r\n    }\r\n\r\n\r\n    // Build weightMatrix from [0][0] -> [numItems-1][capacity-1]\r\n    for (idxItem = 0; idxItem <= numItems; idxItem++) {\r\n        for (idxWeight = 0; idxWeight <= capacity; idxWeight++) {\r\n\r\n            // Fill top row and left column with zeros\r\n            if (idxItem === 0 || idxWeight === 0) {\r\n                weightMatrix[idxItem][idxWeight] = 0;\r\n            }\r\n\r\n            // If item will fit, decide if there's greater value in keeping it,\r\n            // or leaving it\r\n            else if (items[idxItem - 1].cost <= idxWeight) {\r\n                newMax = items[idxItem - 1].price + weightMatrix[idxItem - 1][idxWeight - items[idxItem - 1].cost];\r\n                oldMax = weightMatrix[idxItem - 1][idxWeight];\r\n\r\n                // Update the matrices\r\n                if (newMax > oldMax) {\r\n                    weightMatrix[idxItem][idxWeight] = newMax;\r\n                    keepMatrix[idxItem][idxWeight] = 1;\r\n                }\r\n                else {\r\n                    weightMatrix[idxItem][idxWeight] = oldMax;\r\n                    keepMatrix[idxItem][idxWeight] = 0;\r\n                }\r\n            }\r\n\r\n            // Else, item can't fit; value and weight are the same as before\r\n            else {\r\n                weightMatrix[idxItem][idxWeight] = weightMatrix[idxItem - 1][idxWeight];\r\n            }\r\n        }\r\n    }\r\n\r\n   \r\n    // Traverse through keepMatrix ([numItems][capacity] -> [1][?])\r\n    // to create solutionSet\r\n    idxWeight = capacity;\r\n    idxItem = numItems;\r\n    for (idxItem; idxItem > 0; idxItem--) {\r\n        if (keepMatrix[idxItem][idxWeight] === 1) {\r\n            solutionSet.push(items[idxItem - 1]);\r\n            idxWeight = idxWeight - items[idxItem - 1].cost;\r\n        }\r\n    }\r\n    return { \"maxValue\": weightMatrix[numItems][capacity], \"set\": solutionSet };\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport '../../algorithms/knapsack';\r\nimport { knapsack } from '../../algorithms/knapsack';\r\nimport { AddNewProductForm } from './AddNewProductForm';\r\nimport { AnalysisModal } from './AnalysisModal';\r\nimport { fetchProducts, selectAllProducts } from './productsSlice';\r\n\r\nexport const ProductsPage = () => {\r\n    const products = useSelector(selectAllProducts);\r\n    const status = useSelector(state => state.products.status);\r\n    const error = useSelector(state => state.error);\r\n    const dispatch = useDispatch();\r\n\r\n    const modalDisplayed = useSelector(state => state.products.productsModal.isDisplay);\r\n    const modalOption  = useSelector(state => state.products.productsModal.modalOption);\r\n\r\n\r\n    useEffect(()=>{\r\n        if(status === 'idle'){\r\n            dispatch(fetchProducts())\r\n        }\r\n    }, [status]);\r\n\r\n    let content;\r\n    if(status === 'failed'){\r\n        content = <tr>{error}</tr>\r\n\r\n    }else if(status === 'succeeded'){\r\n\r\n        content = products.map(product => \r\n            <tr key={product._id}>\r\n                <td data-label=\"Pro.ID\">{product._id}</td>\r\n                <td data-label=\"Pro.Name\">{product.productName}</td>\r\n                <td data-label=\"Pro.Type\">{product.productType}</td>\r\n                <td datsa-label=\"Price\">{product.price}$</td>\r\n                <td data-label=\"Cost\">{product.cost}$</td>\r\n            </tr>    \r\n        );\r\n    }else if(status === 'loading'){\r\n        content = <tr>loading...</tr>\r\n    }\r\n    \r\n\r\n\r\n    return (\r\n        <div className={modalDisplayed?\"page modal-open\":\"page\"}>\r\n            {modalDisplayed? modalOption === 0 ? <AnalysisModal/> : <AddNewProductForm/> :\"\"}\r\n            <table className=\"responsive-table\">\r\n                <thead>\r\n                    <th>Pro.ID</th>\r\n                    <th>Pro.Name</th>\r\n                    <th>Pro.Type</th>\r\n                    <th>Price</th>\r\n                    <th>Cost</th>\r\n                </thead>\r\n                <tbody>\r\n                    {content}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    )\r\n\r\n\r\n}","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { displayProductsModal, setProductModalOption } from '../features/products/productsSlice';\r\n\r\nexport const Toolbar = () => {\r\n    const dispatch = useDispatch();\r\n\r\n    return (\r\n        <div className=\"toolbar\">\r\n            <ul className=\"toolbar-tools\">\r\n                <li className=\"toolbar-item\">\r\n                    <Link className='toolbar-link' to=\"#\" onClick={() => {\r\n                            dispatch(setProductModalOption(0));\r\n                            dispatch(displayProductsModal(true));\r\n                        }}>\r\n                        <svg aria-hidden=\"true\" focusable=\"false\" data-prefix=\"far\" data-icon=\"chart-bar\" class=\"svg-inline--fa fa-chart-bar fa-w-16\" role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\">\r\n                            <path fill=\"currentColor\" d=\"M396.8 352h22.4c6.4 0 12.8-6.4 12.8-12.8V108.8c0-6.4-6.4-12.8-12.8-12.8h-22.4c-6.4 0-12.8 6.4-12.8 12.8v230.4c0 6.4 6.4 12.8 12.8 12.8zm-192 0h22.4c6.4 0 12.8-6.4 12.8-12.8V140.8c0-6.4-6.4-12.8-12.8-12.8h-22.4c-6.4 0-12.8 6.4-12.8 12.8v198.4c0 6.4 6.4 12.8 12.8 12.8zm96 0h22.4c6.4 0 12.8-6.4 12.8-12.8V204.8c0-6.4-6.4-12.8-12.8-12.8h-22.4c-6.4 0-12.8 6.4-12.8 12.8v134.4c0 6.4 6.4 12.8 12.8 12.8zM496 400H48V80c0-8.84-7.16-16-16-16H16C7.16 64 0 71.16 0 80v336c0 17.67 14.33 32 32 32h464c8.84 0 16-7.16 16-16v-16c0-8.84-7.16-16-16-16zm-387.2-48h22.4c6.4 0 12.8-6.4 12.8-12.8v-70.4c0-6.4-6.4-12.8-12.8-12.8h-22.4c-6.4 0-12.8 6.4-12.8 12.8v70.4c0 6.4 6.4 12.8 12.8 12.8z\">\r\n                            </path>\r\n                        </svg>\r\n                        <span className='link-text'></span>\r\n                    </Link>\r\n                </li>\r\n\r\n                <li className=\"toolbar-item\">\r\n                    <Link className='toolbar-link' to=\"#\" onClick={() => {\r\n                            dispatch(setProductModalOption(1));\r\n                            dispatch(displayProductsModal(true));\r\n                        }}\r\n                        >\r\n                        <svg aria-hidden=\"true\" focusable=\"false\" data-prefix=\"far\" data-icon=\"plus-square\" class=\"svg-inline--fa fa-plus-square fa-w-14\" role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 448 512\">\r\n                            <path fill=\"currentColor\" d=\"M352 240v32c0 6.6-5.4 12-12 12h-88v88c0 6.6-5.4 12-12 12h-32c-6.6 0-12-5.4-12-12v-88h-88c-6.6 0-12-5.4-12-12v-32c0-6.6 5.4-12 12-12h88v-88c0-6.6 5.4-12 12-12h32c6.6 0 12 5.4 12 12v88h88c6.6 0 12 5.4 12 12zm96-160v352c0 26.5-21.5 48-48 48H48c-26.5 0-48-21.5-48-48V80c0-26.5 21.5-48 48-48h352c26.5 0 48 21.5 48 48zm-48 346V86c0-3.3-2.7-6-6-6H54c-3.3 0-6 2.7-6 6v340c0 3.3 2.7 6 6 6h340c3.3 0 6-2.7 6-6z\">\r\n                            </path>\r\n                        </svg>\r\n                        <span className='link-text'></span>\r\n                    </Link>\r\n                </li>\r\n\r\n            </ul>\r\n        </div>\r\n    )\r\n}","import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { fetchStrategies, selectAllStrategies } from './strategiesSlice';\r\n\r\n\r\nexport const StrategiesPage = () => {\r\n    const strategies = useSelector(selectAllStrategies);\r\n    const status = useSelector(state => state.strategies.status);\r\n    const error = useSelector(state => state.strategies.error);\r\n      \r\n    const dispatch = useDispatch();\r\n\r\n    const productsModal = useState({\r\n        isDisplay : false,\r\n    });\r\n\r\n\r\n    useEffect(()=>{\r\n        if(status === 'idle'){\r\n           dispatch(fetchStrategies())\r\n        }\r\n    }, [status]);\r\n\r\n    let content;\r\n    if(status === 'failed'){\r\n        content = <tr>{error}</tr>\r\n\r\n    }else if(status === 'succeeded'){\r\n\r\n        content = strategies.map(strategy => \r\n            <tr key={strategy._id}>\r\n                <td data-label=\"Strategy.ID\">{strategy._id}</td>\r\n                <td data-label=\"Strategy.title\">{strategy.title}</td>\r\n                <td data-label=\"Strategy.during\">{strategy.startingDate.substring(0 ,10) + \" => \" + strategy.endingDate.substr(0, 10)}</td>\r\n                <td datsa-label=\"Price\">{strategy.totalPrice}$</td>\r\n                <td data-label=\"Cost\">{strategy.totalCost}$</td>\r\n            </tr>    \r\n        );\r\n    }else if(status === 'loading'){\r\n        content = <tr>loading...</tr>\r\n    }\r\n    \r\n\r\n    return (\r\n        <div className=\"page\">\r\n            \r\n            <table className=\"responsive-table\">\r\n                <thead>\r\n                    <th>Strategy.ID</th>\r\n                    <th>Strategy.Title</th>\r\n                    <th>during</th>\r\n                    <th>totalPrice</th>\r\n                    <th>totalCost</th>\r\n                </thead>\r\n                <tbody>\r\n                    {content}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    )\r\n\r\n\r\n}","import React from 'react';\r\nimport { NavBar } from './app/NavBar';\r\nimport './App.css';\r\nimport { Route, BrowserRouter as Router, Switch, Redirect } from 'react-router-dom';\r\nimport { ProductsPage } from './features/products/ProductsPage';\r\nimport { Toolbar } from './app/Toolbar';\r\nimport { StrategiesPage } from './features/strategies/StrategiesPage';\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <NavBar />\r\n      <Toolbar/>\r\n      <div className=\"App\">\r\n        <Switch>\r\n          <Route exact path=\"/management\" />\r\n          <Route exact path=\"/management/products\" component={ProductsPage}/>\r\n          <Route exact path=\"/management/strategies\" component={StrategiesPage}/>\r\n          <Redirect exact path=\"/management\" />\r\n        </Switch>\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport productsReducers from '../features/products/productsSlice';\r\nimport strategiesReducers from '../features/strategies/strategiesSlice';\r\nexport default configureStore({\r\n  reducer: {\r\n    products : productsReducers,\r\n    strategies : strategiesReducers,\r\n  },\r\n});\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport store from './app/store';\r\nimport { Provider } from 'react-redux';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}